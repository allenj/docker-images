#! /bin/bash
#
# U.S. Geological Survey
#
# File - run-shifter
#
# Purpose - Simulate NHM run on Shifter, as might be done by Jenkins.
#
# Authors - Ivan Suftin, Richard McDonald, Andrew Halper
#

set -e

# Docker Compose (which also references nhm.env) can't cope with .env
# files containing the shell's "export ..." syntax, so this is
# necessary to work around that.
set -a

. ./nhm.env			# environment variables file
. ./nhmusgs-base/nhm.sh		# shell functions

log () {
  if [ "$logging" = true ]; then
    echo "$1"
  fi
} # log

# encapsulate some container running boiler-plate
run () {
    svc=$1
    shift

    log ""
    log "Running $svc..."
    
    # the "yq" command below is here to map service names in
    # docker-compose.yml to sub-directory names; unfortunately they
    # don't have the same names

    # if this is the first job...
    if [ -z "$previous_jobid" ]
    then
	# ...start job with no dependency
	jobid=$(sbatch --parsable "`yq r docker-compose.yml services.$svc.build.context`/submit.sl")
    else
    # ...start job with the requirement that the previous job
    # completed successfully (exit code 0)
	jobid=$(sbatch --parsable --dependency=afterok:$previous_jobid "`yq r docker-compose.yml services.$svc.build.context`/submit.sl")
    fi

    # set current jobid to previous_jobid to be used as a dependency
    # by the next job
    previous_jobid=$jobid
} # run

if [ "$1" = -l ]; then
  logging=true
fi

log "Checking if HRU data is downloaded..."
if [ ! -e data ]; then
    mkdir data
fi
if [ ! -f "data/${HRU_DATA_PKG}" ]; then
    log "HRU data needs to be downloaded"
    wget --waitretry=3 --retry-connrefused "${HRU_SOURCE}" \
	-O "data/${HRU_DATA_PKG}"
fi

log "Checking if PRMS data is downloaded..."
if [ ! -f "data/${PRMS_DATA_PKG}" ]; then
    log "PRMS data needs to be downloaded"
    wget --waitretry=3 --retry-connrefused "${PRMS_SOURCE}" \
	-O "data/${PRMS_DATA_PKG}"
fi

COMPOSE_FILES="-f docker-compose.yml -f docker-compose-testing.yml"

# check for Shifter module
if ! module list |& grep ' shifter/' > /dev/null 2>&1 ; then
    log "Loading Shifter module..."
    module load shifter
fi

# call run() function above
run data_loader

# if we want to run the Gridmet service...
if [ "$GRIDMET_DISABLE" != true ]; then
    # ...do that
    run gridmet
    if [ $? != 0 ]; then
	log 'Gridmet data is not available - process exiting'
	exit 1
    fi
fi

# TODO:
#
# [8:27 AM] McDonald, Richard R
# HI Andy,
#
# It looks like last nights run crashed on the first PRMS run. It was
# looking for the wrong restart file:
#
#   ERROR opening input file: /nhm/NHM-PRMS_CONUS/restart/2019-08-21.restart
#   check to be sure the input file exists file specified by control
#   parameter: var_init_file
#
# should have found 2019-08-20.restart
#
# Also Markstrom, Steven L should pipe in on this one but I think it
# would have failed on the second PRMS run as well:
#
#   Control variable start_time set to 2019,08,20,0,0,0.
#
#   Control variable end_time set to 2020,02,28,0,0,0.
#
#   Control variable init_vars_from_file set to 1.
#
#   Control variable var_init_file set to
#   /nhm/NHM-PRMS_CONUS/restart/2019-08-20.restart.
#
#   Control variable save_vars_to_file set to 0.
#
# Here everything looks correct (it has the correct restart file)
# except that for the last mesage should read save_vars_to_file set to
# 1. Is that right Steve? That saves the new restart file?
#
# [9:04 AM] Markstrom, Steven L
#
# Every day there should be two runs of PRMS. The first one uses the
# restart file that was created on the previous day's run. This run
# does not create a restart file, rather it run for 60 days and it
# creates the output (ie the csv files that subsequently get generated
# into the netcdf files that go to the viz team). After all of that
# happens, there is another run of PRMS that it's only purpose is to
# create a restart file. This run is for normally one day, but would
# be longer if there were more days to catch up from the data
# pull. This run does not create any csv output, but just the restart
# file. This restart file should be dated (ie named) according to the
# day before of the first run that will be made on the next day.
#
# The first run should have "init_vars_from_file" set to "1", and
# var_init_file set to the name of the restart file that was created by
# the second run on the day before.
#
# The first run should also have "save_vars_to_file" set to 0.
#
# The second run should have "init_vars_from_file" and "var_init_file"
# set to the same as the first run (because it needs to be initialized
# the same way), but it should also have "save_vars_to_file" set to
# 1. In addition, it should have "var_save_file" set to
# XXXX-XX-XX.restart, where XXXX-XX-XX is the last date that was run
# in the second run.
#
# The idea is that this restart file, created by the second run on the
# previous day, is one day before the first run that needs to be made
# today.
#
# When "init_vars_from_file" is set to 1, then "var_init_file" needs
# to be specified with the name of a file to use for the restart. And
# a file is created as specified by the name set by the
# "var_init_file" argument. If "init_vars_from_file" is set to 0, then
# it doesn't matter what "var_init_file" is set to, or if it is set,
# because it is not used and no file will be created.
#
# When "save_vars_to_file" is set to 1, then the file specified by
# "var_save_file" must exist because it will be read and used to
# initialize the run. This is the restart file that should have been
# created from the second run on the day before.

yesterday=`date --date "$today -1 days" --rfc-3339='date'`

# volume that gets mounted on /nhm in Shifter containers
dir=/caldera/projects/usgs/water/impd/$USER/NHM-PRMS_CONUS/

# PRMS restart directory
restart_dir=restart/

# set simulation interval
NHM_INTERVAL=$(simulation_interval $dir $restart_dir $yesterday '59')

# if we want to run the ofp service...
if [ "$OFP_DISABLE" != true ]; then
    run ofp
fi

run ncf2cbh

# PRMS
run nhm-prms

# run these two services
for svc in out2ncf verifier; do
    run "$svc"
done

# run PRMS service again in restart mode
RESTART=true
NHM_INTERVAL=$(last_simulation_date $dir $restart_dir)/`date --date "$yesterday -59 days" --rfc-3339='date'`
run nhm-prms

log "Slurm jobs scheduled. Will copy output files from Docker volume"
log "Output files will show up in the \"output\" directory"

if [ ! -e output ]; then
    mkdir output
fi
if [ -d output ]; then
    prefix=/caldera/projects/usgs/water/impd/$USER/ofp/nhm_hru_data
    cp `ls -t $prefix/{ppt,rhmax,rhmin,tmax,tmin,ws}*.nc | head -6` output
else
    log '"output" is not a directory'
    exit 1
fi
