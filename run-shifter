#! /bin/bash
#
# U.S. Geological Survey
#
# File - run-shifter
#
# Purpose - Simulate NHM run on Shifter, as might be done by Jenkins.
#
# Authors - Ivan Suftin, Richard McDonald, Andrew Halper
#

set -e

# Docker Compose (which also references nhm.env) can't cope with .env
# files containing the shell's "export ..." syntax, so this is
# necessary to work around that.
set -a

. ./nhm.env			# environment variables file

log () {
  if [ "$logging" = true ]; then
    echo "$1"
  fi
} # log

# encapsulate some container running boiler-plate
run () {
    svc=$1
    shift

    log ""
    log "Running $svc..."
    
    # the "yq" command below is here to map service names in
    # docker-compose.yml to sub-directory names; unfortunately they
    # don't have the same names
    sbatch -W "`yq r docker-compose.yml services.$svc.build.context`/submit.sl"
} # run

if [ "$1" = -l ]; then
  logging=true
fi

log "Checking if HRU data is downloaded..."
if [ ! -e data ]; then
    mkdir data
fi
if [ ! -f "data/${HRU_DATA_PKG}" ]; then
    log "HRU data needs to be downloaded"
    wget --waitretry=3 --retry-connrefused "${HRU_SOURCE}" \
	-O "data/${HRU_DATA_PKG}"
fi

log "Checking if PRMS data is downloaded..."
if [ ! -f "data/${PRMS_DATA_PKG}" ]; then
    log "PRMS data needs to be downloaded"
    wget --waitretry=3 --retry-connrefused "${PRMS_SOURCE}" \
	-O "data/${PRMS_DATA_PKG}"
fi

COMPOSE_FILES="-f docker-compose.yml -f docker-compose-testing.yml"

# check for Shifter module
if ! module list |& grep ' shifter/' > /dev/null 2>&1 ; then
    log "Loading Shifter module..."
    module load shifter
fi

# call run() function above
run data_loader

# if we want to run the Gridmet service...
if [ "$GRIDMET_DISABLE" != true ]; then
    # ...do that
    run gridmet
    if [ $? != 0 ]; then
	log 'Gridmet data is not available - process exiting'
	exit 1
    fi
fi

# if we want to run the ofp service...
if [ "$OFP_DISABLE" != true ]; then
    run ofp
fi

run ncf2cbh

# PRMS
run nhm-prms --env END_DATE="$END_DATE"

# run these two services
for svc in out2ncf verifier; do
    run "$svc"
done

# run PRMS service again in restart mode
export RESTART=true
run nhm-prms

log "Pipeline has completed. Will copy output files from Docker volume"
log "Output files will show up in the \"output\" directory"

if [ ! -e output ]; then
    mkdir output
fi
if [ -d output ]; then
    prefix="/caldera/projects/usgs/water/impd/$USER/ofp/nhm_hru_data"
    cp `ls -t $prefix/{ppt,rhmax,rhmin,tmax,tmin,ws}*.nc | head -6` output
else
    log '"output" is not a directory'
    exit 1
fi
